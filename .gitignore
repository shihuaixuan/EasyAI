# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the .idea directory in version control.
.idea/

# VS Code
.vscode/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~

# Application specific
# 日志文件
logs/
*.log

# 数据库文件
*.db
*.sqlite
*.sqlite3

# 配置文件
.env.local
.env.production
.env.staging
config/local.py
config/production.py

# 存储文件
storage/
uploads/
static/uploads/
media/
sql/

# 临时文件
tmp/
temp/
*.tmp
*.temp

# 缓存文件
.cache/
cache/

# AI模型文件
models/
*.pkl
*.joblib
*.h5
*.pt
*.pth
*.onnx

# 向量数据库文件
chroma_db/
faiss_index/
*.index

# 文档处理临时文件
*.pdf.txt
*.docx.txt

# 监控和性能文件
prometheus_data/
grafana_data/

# Docker
.dockerignore
Dockerfile.local
docker-compose.override.yml

# Kubernetes
*.yaml.local
*.yml.local
kustomization.yaml

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# 备份文件
*.bak
*.backup
*.old

# 编辑器临时文件
*.swp
*.swo
*~
.#*
#*#

# 系统文件
.fuse_hidden*
.directory
.Trash-*
.nfs*

# 项目特定
# 测试文件
src/test/
src/docs/
# AI模型文件目录（排除业务逻辑中的model目录）
/models/
/model/
/test/
/.trae/
# 开发环境配置
.env.dev
.env.development

# 测试环境配置
.env.test
.env.testing

# 生产环境配置
.env.prod
.env.production

# 本地覆盖配置
local_settings.py
settings_local.py

# 数据文件
data/
datasets/
*.csv
*.json.bak
*.xml.bak

# 实验和调试
experiments/
debug/
playground/
scratch/

# 文档生成
docs/_build/
docs/build/
site/

# 性能分析
*.prof
profile_output/

# 安全相关
*.key
*.pem
*.crt
*.p12
secrets/
credentials/

# 第三方工具
.pre-commit-config.yaml.bak
.flake8.bak
.isort.cfg.bak